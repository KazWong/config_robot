<?xml version="1.0"?>
<robot name="robot" xmlns:xacro="http://ros.org/wiki/xacro">
	<!-- General Macro -->
	<xacro:include filename="$(find config_robot)/urdf/lib/common.urdf.xacro" />
	<!-- Wheel Macro -->
	<xacro:include filename="$(find config_robot)/urdf/lib/wheel/wheel.urdf.xacro" />
	<xacro:include filename="$(find config_robot)/urdf/lib/wheel/swivel_caster.urdf.xacro" />

	<!-- PROPERTY LIST -->
	<!--All units in m-kg-s-radians unit system -->
	<xacro:property name="M_PI_2" value="${pi/2.0}" />

	<!-- AGV Base -->
	<xacro:property name="agv_base_height" value="0.12" />
	<xacro:property name="agv_base_lift" value="0.05" />
	<xacro:property name="agv_base_width" value="0.495" />
	<xacro:property name="agv_base_length" value="0.73" />
	<xacro:property name="agv_base_mass" value="40" />
	<xacro:property name="agv_wheel_height" value="0.07825" />


	<!-- BASE-FOOTPRINT -->
	<!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin -->
	<link name="base_footprint">

	</link>

	<!-- AGV_BASE_LINK -->
	<joint name="agv_base_joint" type="fixed">
		<origin xyz="0 0 ${agv_base_height/2+agv_base_lift}" rpy="0 0 0" />
		<parent link="base_footprint"/>
		<child link="agv_base_link" />
	</joint>
	
	<link name="agv_base_link">
		<!-- body -->
		<xacro:inertia_cuboid mass="${agv_base_mass}" d="${agv_base_length}" w="${agv_base_width}" 
													h="${agv_base_height}" xyz="0 0 ${-agv_base_height/2-agv_base_lift}" />
		<xacro:collision_cuboid length="${agv_base_length}" width="${agv_base_width}" height="${agv_base_height}" />
		<xacro:visual_cuboid length="${agv_base_length}" width="${agv_base_width}" height="${agv_base_height}" material="White" />
		
		<!-- handle -->
		<xacro:property name="x" value="0.34"/>
		<xacro:property name="y" value="0.22"/>
		<xacro:property name="radius" value="0.01"/>	
		<xacro:property name="base_length" value="0.4"/>
		<xacro:property name="upper_length" value="0.2"/>
		<xacro:property name="handle_length" value="${2*y}"/>
		<xacro:property name="upper_angle" value="${pi/7}"/>
		
		<!-- handle left_base -->
		<xacro:property name="left_base_xyz" value="-${x} ${y} ${base_length/2}"/>	
		<xacro:property name="left_base_rpy" value="0.0 0.0 0.0"/>	
		<xacro:inertia_cylinder	mass="0.02" radius="${radius}" length="${base_length}" xyz="${left_base_xyz}" rpy="${left_base_rpy}"/>
		<xacro:collision_cylinder radius="${radius}" length="${base_length}" xyz="${left_base_xyz}" rpy="${left_base_rpy}"/>
		<xacro:visual_cylinder radius="${radius}" length="${base_length}" xyz="${left_base_xyz}" rpy="${left_base_rpy}" />
		
		<!-- handle right_base -->
		<xacro:property name="right_base_xyz" value="-${x} -${y} ${base_length/2}"/>	
		<xacro:property name="right_base_rpy" value="0.0 0.0 0.0"/>	
		<xacro:inertia_cylinder	mass="0.02" radius="${radius}" length="${base_length}" xyz="${right_base_xyz}" rpy="${right_base_rpy}"/>
		<xacro:collision_cylinder radius="${radius}" length="${base_length}" xyz="${right_base_xyz}" rpy="${right_base_rpy}"/>
		<xacro:visual_cylinder radius="${radius}" length="${base_length}" xyz="${right_base_xyz}" rpy="${right_base_rpy}" />
		
		<!-- handle left_upper -->
		<xacro:property name="left_upper_xyz"	value="-${x + upper_length*0.48*sin(upper_angle)} ${y} 
																					${base_length + upper_length*0.45*cos(upper_angle)}"/>	
		<xacro:property name="left_upper_rpy" value="0.0 -${upper_angle} 0.0"/>	
		<xacro:inertia_cylinder	mass="0.02" radius="${radius}" length="${upper_length}" xyz="${left_upper_xyz}" rpy="${left_upper_rpy}"/>
		<xacro:collision_cylinder radius="${radius}" length="${upper_length}" xyz="${left_upper_xyz}" rpy="${left_upper_rpy}"/>
		<xacro:visual_cylinder radius="${radius}" length="${upper_length}" xyz="${left_upper_xyz}" rpy="${left_upper_rpy}" />
		
		<!-- handle right_upper -->
		<xacro:property name="right_upper_xyz"	value="-${x + upper_length*0.48*sin(upper_angle)} -${y} 
																						${base_length + upper_length*0.45*cos(upper_angle)}"/>	
		<xacro:property name="right_upper_rpy" value="0.0 -${upper_angle} 0.0"/>	
		<xacro:inertia_cylinder	mass="0.02" radius="${radius}" length="${upper_length}" xyz="${right_upper_xyz}" rpy="${right_upper_rpy}"/>
		<xacro:collision_cylinder radius="${radius}" length="${upper_length}" xyz="${right_upper_xyz}" rpy="${right_upper_rpy}"/>
		<xacro:visual_cylinder radius="${radius}" length="${upper_length}" xyz="${right_upper_xyz}" rpy="${right_upper_rpy}" />
		
		<!-- handle handle -->
		<xacro:property name="handle_xyz"	value="-${x + upper_length*sin(upper_angle)} 0.0 
																			${base_length + upper_length*cos(upper_angle) - radius}"/>	
		<xacro:property name="handle_rpy" value="${pi/2} 0.0 0.0"/>	
		<xacro:inertia_cylinder	mass="0.02" radius="${radius}" length="${handle_length}" xyz="${handle_xyz}" rpy="${handle_rpy}"/>
		<xacro:collision_cylinder radius="${radius}" length="${handle_length}" xyz="${handle_xyz}" rpy="${handle_rpy}"/>
		<xacro:visual_cylinder radius="${radius}" length="${handle_length}" xyz="${handle_xyz}" rpy="${handle_rpy}" />
	</link>
	
	<!-- WHEEL_CENTER_LINK -->
	<joint name="wheel_center_joint" type="fixed">
		<origin xyz="-0.22 0 0" rpy="0 0 0" />
		<parent link="base_footprint"/>
		<child link="wheel_center_link" />
	</joint>
	
	<link name="wheel_center_link"/>
	
	<!-- WHEELS -->
	<xacro:wheel	name="wheel_left" parent="agv_base_link"
													xyz="-0.22 0.15 ${-agv_base_height/2-agv_base_lift + agv_wheel_height}" rpy="${M_PI_2} 0 0" damping="0.0" />
	<xacro:wheel	name="wheel_right" parent="agv_base_link"
													xyz="-0.22 -0.15 ${-agv_base_height/2-agv_base_lift + agv_wheel_height}" rpy="${-M_PI_2} 0 0" damping="0.0" />
	<xacro:swivel_caster	name="swivel_caster_left" parent="agv_base_link"
													xyz="0.22 0.15 ${-agv_base_height/2-agv_base_lift + agv_wheel_height}" rpy="${M_PI_2} 0 0" damping="0.0" />
	<xacro:swivel_caster	name="swivel_caster_right" parent="agv_base_link"
													xyz="0.22 -0.15 ${-agv_base_height/2-agv_base_lift + agv_wheel_height}" rpy="${-M_PI_2} 0 0" damping="0.0" />

<!-- <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo> -->

<gazebo reference="base_footprint">
    <material>Gazebo/DarkGrey</material>
</gazebo>
  
<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>world</odometrySource>
      <publishOdomTF>true</publishOdomTF>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishWheelTF>false</publishWheelTF>
      <publishTf>true</publishTf>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <updateRate>30</updateRate>
      <leftJoint>wheel_left_joint</leftJoint>
      <rightJoint>wheel_right_joint</rightJoint>
      <wheelSeparation>0.3</wheelSeparation>
      <wheelDiameter>0.1565</wheelDiameter>
      <wheelAcceleration>1</wheelAcceleration>
      <wheelTorque>10</wheelTorque>
      <rosDebugLevel>na</rosDebugLevel>
  </plugin>
</gazebo>
 
 <gazebo reference="agv_base_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>500</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>100.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
        <initialOrientationAsReference>false</initialOrientationAsReference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>

  <gazebo reference="wheel_left_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="wheel_right_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="swivel_caster_left">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/FlatBlack</material>
  </gazebo>
  
  <gazebo reference="swivel_caster_right">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/FlatBlack</material>
  </gazebo>
  
<!--    <gazebo reference="wheel_left">
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>

    <material>Gazebo/Orange</material>
  </gazebo>
  
  <gazebo reference="wheel_right">
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>

    <material>Gazebo/Orange</material>
  </gazebo>

<transmission name="tran1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wheel_left_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>   
    <actuator name="left_motor">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <transmission name="tran2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wheel_right_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>  
    <actuator name="right_motor">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission> -->
 
</robot>
